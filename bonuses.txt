BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers

1. we created final fields that contains the numbers value we wanted to use in our code.
When we saw that we need to use a numerical value whose value can change according to the game definition - we used the fields in the configuration file.
2. avoiding the use of magic numbers - player and dealer.
Fully supporting all configuration fields - player, dealer and table.
3. we run the main class and checked if the values are corrected. 



--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.

1. we wrote a terminate method in dealer that calls all the terminate methods for each player in reverse (for loop form the end to the start).
in those methods we changed the terminate boolean value to true and all the thread accepted the change and killed themselfs gracefully.
2. player and dealer.
3. we checked in the logs file that all the threads are terminated in a reverse order they were created. 

--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

We are not entitled to this bonus.

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

1. we placed the human and AI threads in waiting state when they finished placing three tokens and the dealer notified them only when the freeze time was over.
the player threads are in waiting state until the input manager call "keyPressed" then they place/remove the token by the slot they got, and return to waiting state if their actions length is bellow 3.
the dealer sleep for a short time and wakes up to update the clock and the freeze time for each player who has a penalty, and check if he has sets to check.
in fact, all the threads do not wake up unless some actual job needs to be done.
the only threads created by us are:1 thread per player + 1 additional thread for non-human players.
2. player and dealer.
3. we checked the logs file if any actions are done by the threads while they are in waiting state.
we checked in the logs file which threads were created.
